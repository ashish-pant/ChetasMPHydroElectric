#pragma checksum "C:\Selfproject\Latest\NHP_CHETAS\NHP_CHETAS\Views\Error\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "df16d60fd505ab6057c2f1f849f187d7a0ce1857"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Error_Index), @"mvc.1.0.view", @"/Views/Error/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"df16d60fd505ab6057c2f1f849f187d7a0ce1857", @"/Views/Error/Index.cshtml")]
    #nullable restore
    public class Views_Error_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<style>\r\n    ");
            WriteLiteral(@"@import url(""https://fonts.googleapis.com/css?family=Bungee"");

    body {
        background: #1b1b1b;
        color: white;
        font-family: ""Bungee"", cursive;
        margin-top: 50px;
        text-align: center;
    }

    a {
        color: #2aa7cc;
        text-decoration: none;
    }

        a:hover {
            color: white;
        }

    svg {
        width: 50vw;
    }

    .lightblue {
        fill: #444;
    }

    .eye {
        cx: calc(115px + 30px * var(--mouse-x));
        cy: calc(50px + 30px * var(--mouse-y));
    }

    #eye-wrap {
        overflow: hidden;
    }

    .error-text {
        font-size: 120px;
    }

    .alarm {
        animation: alarmOn 0.5s infinite;
    }

    ");
            WriteLiteral(@"@keyframes alarmOn {
        to {
            fill: darkred;
        }
    }

</style>

<svg xmlns=""http://www.w3.org/2000/svg"" id=""robot-error"" viewBox=""0 0 260 118.9"" role=""img"">
    <title xml:lang=""en"">404 Error</title>

    <defs>
        <clipPath id=""white-clip""><circle id=""white-eye"" fill=""#cacaca"" cx=""130"" cy=""65"" r=""20"" /> </clipPath>
        <text id=""text-s"" class=""error-text"" y=""106""> 404 </text>
    </defs>
    <path class=""alarm"" fill=""#e62326"" d=""M120.9 19.6V9.1c0-5 4.1-9.1 9.1-9.1h0c5 0 9.1 4.1 9.1 9.1v10.6"" />
    <use xlink:href=""#text-s"" x=""-0.5px"" y=""-1px"" fill=""black""></use>
    <use xlink:href=""#text-s"" fill=""#2b2b2b""></use>
    <g id=""robot"">
        <g id=""eye-wrap"">
            <use xlink:href=""#white-eye""></use>
            <circle id=""eyef"" class=""eye"" clip-path=""url(#white-clip)"" fill=""#000"" stroke=""#2aa7cc"" stroke-width=""2"" stroke-miterlimit=""10"" cx=""130"" cy=""65"" r=""11"" />
            <ellipse id=""white-eye"" fill=""#2b2b2b"" cx=""130"" cy=""40"" rx=""18"" ry=""12"" />");
            WriteLiteral(@"
        </g>
        <circle class=""lightblue"" cx=""105"" cy=""32"" r=""2.5"" id=""tornillo"" />
        <use xlink:href=""#tornillo"" x=""50""></use>
        <use xlink:href=""#tornillo"" x=""50"" y=""60""></use>
        <use xlink:href=""#tornillo"" y=""60""></use>
    </g>
</svg>
<h1>You are not allowed to enter this page.</h1>
<h2>
    Go <a href=""javascript:void(0)"" onclick=""Home()"">Home!</a>
</h2>

<script>
   function Home() {
        location.href = ""/Dashboard/Index"";
    }
    var root = document.documentElement;
    var eyef = document.getElementById('eyef');
    var cx = document.getElementById(""eyef"").getAttribute(""cx"");
    var cy = document.getElementById(""eyef"").getAttribute(""cy"");

    document.addEventListener(""mousemove"", evt => {
        let x = evt.clientX / innerWidth;
        let y = evt.clientY / innerHeight;

        root.style.setProperty(""--mouse-x"", x);
        root.style.setProperty(""--mouse-y"", y);

        cx = 115 + 30 * x;
        cy = 50 + 30 * y;
        eyef.setAt");
            WriteLiteral(@"tribute(""cx"", cx);
        eyef.setAttribute(""cy"", cy);

    });

    document.addEventListener(""touchmove"", touchHandler => {
        let x = touchHandler.touches[0].clientX / innerWidth;
        let y = touchHandler.touches[0].clientY / innerHeight;

        root.style.setProperty(""--mouse-x"", x);
        root.style.setProperty(""--mouse-y"", y);
    });

</script>");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
